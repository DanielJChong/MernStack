[{"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\index.js":"1","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\reportWebVitals.js":"2","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\App.js":"3","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Main.js":"4","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Add.js":"5","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Update.js":"6","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Detail.js":"7","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\components\\PetList.js":"8","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\components\\PetForm.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":483,"mtime":1611687535385,"results":"13","hashOfConfig":"11"},{"size":915,"mtime":1611688068003,"results":"14","hashOfConfig":"11"},{"size":5260,"mtime":1611705559601,"results":"15","hashOfConfig":"11"},{"size":2064,"mtime":1611696373855,"results":"16","hashOfConfig":"11"},{"size":1744,"mtime":1611701256962,"results":"17","hashOfConfig":"11"},{"size":1118,"mtime":1611688652898,"results":"18","hashOfConfig":"11"},{"size":2745,"mtime":1611695285635,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"kcxrz9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\index.js",[],["43","44"],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\App.js",[],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Main.js",["45"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nimport PetList from '../components/PetList';\r\n\r\nconst Main = () => {\r\n    const [pet, setPet] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res =>{ \r\n                setPet(res.data)\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n    \r\n    const removeFromDom = petId => {\r\n        setPet(pet.filter(pet => pet._id != petId));\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <Link to={\"/pets/new\"}>Add a pet to the shelter</Link>\r\n            <h3>These pets are looking for a good home</h3>\r\n            {loaded && <PetList pet={pet} removeFromDom={removeFromDom}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Add.js",["46"],"C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Update.js",["47"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nimport PetForm from '../components/PetForm';\r\n\r\n\r\nconst Update = props => {\r\n    const { id, } = props;\r\n    const [pet, setPet] = useState();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pet/' + id)\r\n            .then(res => {\r\n                setPet(res.data);\r\n                setLoaded(true);\r\n            })\r\n    }, [])\r\n    \r\n    const updatePet = pet => {\r\n        axios.put('http://localhost:8000/api/pet/' + id, pet)\r\n            .then(res => navigate(\"/\"))\r\n            .catch(err=>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr)\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <Link to={\"/\"}>back to home</Link>\r\n            <h3>Edit </h3>\r\n            {errors.map((err, index) => <p key={index} style={{color: \"red\"}}>{err}</p>)}\r\n            {loaded && (\r\n                <div>\r\n                    <PetForm\r\n                        onSubmitProp={updatePet}\r\n                        initialPetName={pet.petName}\r\n                        initialPetType={pet.petType}\r\n                        initialPetDescription={pet.petDescription}\r\n                        initialSkillOne={pet.skillOne}\r\n                        initialSkillTwo={pet.skillTwo}\r\n                        initialSkillThree={pet.skillThree}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\views\\Detail.js",["48"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport { navigate } from '@reach/router';\r\n\r\n\r\nconst Detail = props => {\r\n    const [pet, setPet] = useState({})\r\n    \r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet/\" + props.id)\r\n            .then(res => setPet(res.data))\r\n    }, [])\r\n\r\n    // function handleLike(index) {\r\n    //     //send a request to the backend\r\n    //     const petToUpdate = pet[index];\r\n\r\n    //     axios.post('http://localhost:8000/api/pet/' + petToUpdate.id + '/likes')\r\n    //         .then(response => {\r\n    //             const updatedPet = response.data;\r\n\r\n    //             const clonedPet = pet.slice(); //avoid mutating the current array\r\n    //             clonedPet[index] = updatedPet;\r\n    //             setPet(clonedPet);\r\n    //         })\r\n    // }\r\n\r\n    const deletePet = (petId) => {\r\n        axios.delete('http://localhost:8000/api/pet/' + petId)\r\n            .then(res => {\r\n                navigate (\"/\")\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <Link to={\"/\"}>back to home</Link>\r\n            <h3>Details about: {pet.petName}</h3>\r\n            <button onClick={(e)=>{deletePet(pet._id)}}>\r\n                Adopt {pet.petName}\r\n            </button>\r\n            <p>Pet Type: {pet.petType}</p>\r\n            <p>Description: {pet.petDescription}</p>\r\n            <p>Skills: {pet.skillOne}, {pet.skillTwo}, {pet.skillThree}</p>\r\n            {/* <div>\r\n                <button onClick={() => handleLike()}>Like</button>\r\n                <p>{pet.likes} Likes</p>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\components\\PetList.js",["49"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nconst PetList = props => {\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {props.pet.map((pet, idx)=>\r\n                    <tr>\r\n                        <td>{pet.petName}</td>\r\n                        <td>{pet.petType}</td>\r\n                        <td>\r\n                            <Link to={\"/pets/\" + pet._id}>\r\n                                Details\r\n                            </Link>\r\n                            |\r\n                            <Link to={\"/pets/\" + pet._id + \"/edit\"}>\r\n                                Edit\r\n                            </Link> \r\n                        </td>\r\n                    </tr>\r\n                )}    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetList;","C:\\Users\\danie\\Documents\\codingdojo\\mern_stack\\belt_exam\\MernBeltTest\\client\\src\\components\\PetForm.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":20,"column":42,"nodeType":"56","messageId":"57","endLine":20,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":3,"column":15,"nodeType":"60","messageId":"61","endLine":3,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":20,"column":8,"nodeType":"64","endLine":20,"endColumn":10,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":13,"column":8,"nodeType":"64","endLine":13,"endColumn":10,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":13},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["72"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [id]",{"range":"77","text":"78"},"Update the dependencies array to be: [props.id]",{"range":"79","text":"80"},[579,581],"[id]",[375,377],"[props.id]"]